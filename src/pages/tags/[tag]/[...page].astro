---
import { getCollection } from "astro:content";
import TagPosts from "@layouts/TagPosts.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsAndProjectsByTag from "@utils/getPostsAndProjectsByTag";
import type { GetStaticPathsOptions } from "astro";
import { SITE } from "@config";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await getCollection("blog");
  const projects = await getCollection("project");
  const collection = [...posts.map(p => ({...p, collection: 'blog'})), ...projects.map(p => ({...p, collection: 'project'}))];
  const tags = getUniqueTags(collection);

  return tags.flatMap(({ tag, tagName }) => {
    const tagPosts = getPostsAndProjectsByTag(collection, tag);

    return paginate(tagPosts, {
      params: { tag },
      props: { tagName },
      pageSize: SITE.postPerPage,
    });
  });
}

const params = Astro.params;
const { tag } = params;
const { page, tagName } = Astro.props;
---

<TagPosts {page} {tag} {tagName} />
